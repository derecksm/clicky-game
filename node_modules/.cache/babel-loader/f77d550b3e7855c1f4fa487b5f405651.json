{"ast":null,"code":"var _jsxFileName = \"/Users/derecksanmiguel/Desktop/homework/clicky-game/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport Img1 from '../images/blastoids.jpeg';\nimport Img2 from '../images/charzard.jpeg';\nimport Img3 from '../images/mewtwo.jpeg';\nimport Img4 from '../images/machop.jpeg';\nimport Img5 from '../images/mimikyu.jpeg';\nimport Img6 from '../images/pikachu.jpeg';\nimport Img7 from '../images/raticate.jpeg';\nimport Img8 from '../images/sandshrew.jpeg';\nimport Img9 from '../images/snorlax.jpeg';\nimport Img10 from '../images/squirtle.jpeg'; //If card is not in array add one point \n//if card is in array game is over \n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [{\n        id: 1,\n        src: Img1\n      }, {\n        id: 2,\n        src: Img2\n      }, {\n        id: 3,\n        src: Img3\n      }, {\n        id: 4,\n        src: Img4\n      }, {\n        id: 5,\n        src: Img5\n      }, {\n        id: 6,\n        src: Img6\n      }, {\n        id: 7,\n        src: Img7\n      }, {\n        id: 8,\n        src: Img8\n      }, {\n        id: 9,\n        src: Img9\n      }, {\n        id: 10,\n        src: Img10\n      }],\n      count: 0,\n      guess: [],\n      isGame: true,\n      message: \"Click on a Pokemon to start game!\"\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        message: 'Good job! Keep catchin them'\n      });\n      console.log(id);\n      let guessArray = this.state.guess;\n\n      if (guessArray.indexOf(id) !== -1) {\n        this.setState({\n          count: 0,\n          guess: [],\n          isGame: false,\n          message: 'You lose...click on another Pokemon to try again!'\n        }, _ => console.log(this.state.guess));\n      } else if (guessArray.length === 10) {\n        this.setState({\n          isGame: false,\n          message: 'You caught them all!'\n        });\n      } else {\n        let temp = this.shuffle(this.state.images);\n        this.setState({\n          images: [...this.state.images, temp]\n        });\n        guessArray.push(id);\n        this.setState({\n          count: this.state.count + 1,\n          isGame: true,\n          guess: guessArray,\n          message: 'Good job! Keep catchin them'\n        }, _ => console.log(this.state.guess));\n      }\n    };\n  }\n\n  shuffle(temp) {\n    let shuffledArr = temp.sort(() => Math.random() - 0.5);\n    return shuffledArr;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.images.map(({\n      id,\n      src\n    }) => React.createElement(\"div\", {\n      className: \"card\",\n      style: \"width: 18rem;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"card-img-top\",\n      key: id,\n      src: src,\n      alt: \"\",\n      onClick: this.handleClick.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Score: \", this.state.count), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.message));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/derecksanmiguel/Desktop/homework/clicky-game/src/components/Card/Card.js"],"names":["React","Component","Img1","Img2","Img3","Img4","Img5","Img6","Img7","Img8","Img9","Img10","Card","state","images","id","src","count","guess","isGame","message","handleClick","setState","console","log","guessArray","indexOf","_","length","temp","shuffle","push","shuffledArr","sort","Math","random","render","map","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Img1 from '../images/blastoids.jpeg'\nimport Img2 from '../images/charzard.jpeg'\nimport Img3 from '../images/mewtwo.jpeg'\nimport Img4 from '../images/machop.jpeg'\nimport Img5 from '../images/mimikyu.jpeg'\nimport Img6 from '../images/pikachu.jpeg'\nimport Img7 from '../images/raticate.jpeg'\nimport Img8 from '../images/sandshrew.jpeg'\nimport Img9 from '../images/snorlax.jpeg'\nimport Img10 from '../images/squirtle.jpeg'\n\n\n\n//If card is not in array add one point \n\n//if card is in array game is over \n\n\nclass Card extends Component {\n    state = {\n        images: [\n            { id: 1, src: Img1 },\n            { id: 2, src: Img2 },\n            { id: 3, src: Img3 },\n            { id: 4, src: Img4 },\n            { id: 5, src: Img5 },\n            { id: 6, src: Img6 },\n            { id: 7, src: Img7 },\n            { id: 8, src: Img8 },\n            { id: 9, src: Img9 },\n            { id: 10, src: Img10 },\n        ],\n        count: 0,\n        guess: [],\n        isGame: true,\n        message: \"Click on a Pokemon to start game!\"\n    }\n    shuffle(temp) {\n        let shuffledArr = temp.sort(() => Math.random() - 0.5)\n        return shuffledArr\n    }\n\n\n    handleClick = id => {\n        this.setState({\n            message: 'Good job! Keep catchin them'\n        })\n        console.log(id)\n        let guessArray = this.state.guess\n        if (guessArray.indexOf(id) !== -1) {\n            this.setState({\n                count: 0,\n                guess: [],\n                isGame: false,\n                message: 'You lose...click on another Pokemon to try again!'\n            }, _ => console.log(this.state.guess))\n        } else if (guessArray.length === 10) {\n            this.setState({\n                isGame: false,\n                message: 'You caught them all!'\n            })\n        } else {\n            let temp = this.shuffle(this.state.images)\n            this.setState({\n                images: [...this.state.images, temp]\n            })\n            guessArray.push(id)\n            this.setState({\n                count: this.state.count + 1,\n                isGame: true,\n                guess: guessArray,\n                message: 'Good job! Keep catchin them'\n            }, _ => console.log(this.state.guess))\n        }\n\n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n\n                {\n                    this.state.images.map(({ id, src }) =>\n                        <div className=\"card\" style=\"width: 18rem;\">\n                            <img className='card-img-top' key={id} src={src} alt='' onClick={this.handleClick.bind(this, id)} />\n                            </div>\n                            )\n                        }\n                <div>Score: {this.state.count}</div>\n                            <div>{this.state.message}</div>\n\n                        </div>\n                    )\n                }\n                }\n                \nexport default Card"]},"metadata":{},"sourceType":"module"}