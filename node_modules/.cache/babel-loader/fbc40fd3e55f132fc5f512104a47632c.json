{"ast":null,"code":"var _jsxFileName = \"/Users/derecksanmiguel/Desktop/homework/clicky-game/src/components/Card/Card.js\";\nimport React, { Component } from 'react';\nimport Img1 from '../images/blastoids.jpeg';\nimport Img2 from '../images/charzard.jpeg';\nimport Img3 from '../images/mewtwo.jpeg';\nimport Img4 from '../images/machop.jpeg';\nimport Img5 from '../images/mimikyu.jpeg';\nimport Img6 from '../images/pikachu.jpeg';\nimport Img7 from '../images/raticate.jpeg';\nimport Img8 from '../images/sandshrew.jpeg';\nimport Img9 from '../images/snorlax.jpeg';\nimport Img10 from '../images/squirtle.jpeg';\nconst cardStyle = {\n  maxWidth: '100px',\n  maxHeight: '100px',\n  margin: '10px' //If card is not in array add one point \n  //if card is in array game is over \n\n};\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [{\n        id: 1,\n        src: Img1\n      }, {\n        id: 2,\n        src: Img2\n      }, {\n        id: 3,\n        src: Img3\n      }, {\n        id: 4,\n        src: Img4\n      }, {\n        id: 5,\n        src: Img5\n      }, {\n        id: 6,\n        src: Img6\n      }, {\n        id: 7,\n        src: Img7\n      }, {\n        id: 8,\n        src: Img8\n      }, {\n        id: 9,\n        src: Img9\n      }, {\n        id: 10,\n        src: Img10\n      }],\n      count: 0,\n      guess: [],\n      isGame: true\n    };\n\n    this.handleClick = id => {\n      let guessArray = this.state.guess;\n\n      if (guessArray.indexOf(this.state.id) === -1) {\n        guessArray.push(this.state.id);\n        this.setState({\n          count: this.state.count + 1,\n          isGame: SVGComponentTransferFunctionElement,\n          guess: guessArray\n        });\n      }\n\n      console.log(id);\n      let temp = this.shuffle(this.state.images);\n      this.setState({\n        images: [...this.state.images, temp]\n      });\n    };\n  }\n\n  shuffle(temp) {\n    let shuffledArr = temp.sort(() => Math.random() - 0.5);\n    return shuffledArr;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.images.map(({\n      id,\n      src\n    }) => React.createElement(\"img\", {\n      style: cardStyle,\n      key: id,\n      src: src,\n      alt: \"\",\n      onClick: this.handleClick.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Score: \", this.state.count));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/Users/derecksanmiguel/Desktop/homework/clicky-game/src/components/Card/Card.js"],"names":["React","Component","Img1","Img2","Img3","Img4","Img5","Img6","Img7","Img8","Img9","Img10","cardStyle","maxWidth","maxHeight","margin","Card","state","images","id","src","count","guess","isGame","handleClick","guessArray","indexOf","push","setState","SVGComponentTransferFunctionElement","console","log","temp","shuffle","shuffledArr","sort","Math","random","render","map","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Img1 from '../images/blastoids.jpeg'\nimport Img2 from '../images/charzard.jpeg'\nimport Img3 from '../images/mewtwo.jpeg'\nimport Img4 from '../images/machop.jpeg'\nimport Img5 from '../images/mimikyu.jpeg'\nimport Img6 from '../images/pikachu.jpeg'\nimport Img7 from '../images/raticate.jpeg'\nimport Img8 from '../images/sandshrew.jpeg'\nimport Img9 from '../images/snorlax.jpeg'\nimport Img10 from '../images/squirtle.jpeg'\n\nconst cardStyle = {\n    maxWidth: '100px',\n    maxHeight: '100px',\n    margin: '10px'\n}\n\n//If card is not in array add one point \n\n//if card is in array game is over \n\n\nclass Card extends Component {\n    state = {\n        images: [\n            { id: 1, src: Img1 },\n            { id: 2, src: Img2 },\n            { id: 3, src: Img3 },\n            { id: 4, src: Img4 },\n            { id: 5, src: Img5 },\n            { id: 6, src: Img6 },\n            { id: 7, src: Img7 },\n            { id: 8, src: Img8 },\n            { id: 9, src: Img9 },\n            { id: 10, src: Img10 },\n        ],\n        count: 0,\n        guess:[],\n        isGame: true\n    }\n    shuffle(temp) {\n        let shuffledArr = temp.sort(() => Math.random() -0.5)\n        return shuffledArr\n    }\n\n\n    handleClick = id => {\n        let guessArray = this.state.guess\n\n        if(guessArray.indexOf(this.state.id) === -1) {\n            guessArray.push(this.state.id)\n            this.setState({ \n                count: this.state.count + 1,\n                isGame: SVGComponentTransferFunctionElement,\n                guess: guessArray\n            })\n                \n        } \n        console.log(id)\n        let temp = this.shuffle(this.state.images)\n        this.setState({\n            images:  [...this.state.images, temp]\n        })\n        \n    } \n\n\n\n\n    render() {\n        return (\n            <div>\n\n                {\n                   this.state.images.map(({ id, src }) =>\n                        <img style={cardStyle} key={id} src={src} alt='' onClick={this.handleClick.bind(this, id)} />\n                    )\n                }\n                <div>Score: {this.state.count}</div>\n\n            </div>\n        )\n    }\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}